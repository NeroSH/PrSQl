--
-- PostgreSQL database dump
--

-- Dumped from database version 12.1
-- Dumped by pg_dump version 12.1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: logging; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA logging;


ALTER SCHEMA logging OWNER TO postgres;

--
-- Name: adminpack; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS adminpack WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION adminpack; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION adminpack IS 'administrative functions for PostgreSQL';


--
-- Name: change_my_table(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.change_my_table() RETURNS trigger
    LANGUAGE plpgsql LEAKPROOF
    AS $$BEGIN
	IF (NEW.id IN (select id from my_object)) THEN
		new.time_create := now();
		UPDATE my_object 
			SET time_dead = NEW.time_create
		WHERE id = NEW.id AND time_dead IS NULL ;
		if (NEW.name IS NULL) then
		new.name := (
			select name  
			from my_object 
			where new.id = id 
				and time_dead is null);
		end if;
		if (NEW.surname IS NULL) then
		new.surname := (
			select surname
			from my_object
			where new.id = id 
				and time_dead is null);
		end if;
		if (NEW.patrinimic IS NULL) then
		new.patrinimic := (
			select patrinimic
			from my_object
			where new.id = id 
				and time_dead is null);
		end if;
	ELSE 
		NEW.time_create := now();
	END IF;
	return new;
END;
$$;


ALTER FUNCTION public.change_my_table() OWNER TO postgres;

--
-- Name: change_trigger(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.change_trigger() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$ 
        BEGIN
 
                IF      TG_OP = 'INSERT'
 
                THEN
 
                        INSERT INTO t_history (tabname, operation, new_val)
 
                                VALUES (TG_RELNAME, TG_OP, row(NEW.*));
 
                        RETURN NEW;
 
                ELSIF   TG_OP = 'UPDATE'
 
                THEN
 
                        INSERT INTO t_history (tabname, operation, new_val, old_val)
 
                                VALUES (TG_RELNAME, TG_OP,
 
                                        row(NEW.*), row(OLD.*));
 
                        RETURN NEW;
 
                ELSIF   TG_OP = 'DELETE'
 
                THEN
 
                        INSERT INTO t_history (tabname, operation, old_val)
 
                                VALUES (TG_RELNAME, TG_OP, row(OLD.*));
 
                        RETURN OLD;
 
                END IF;
 
        END;
 
$$;


ALTER FUNCTION public.change_trigger() OWNER TO postgres;

--
-- Name: concat(text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.concat(razd text, pfirst text, psecond text) RETURNS text
    LANGUAGE plpgsql
    AS $$
begin
	return pfirst||razd||psecond;

end;
$$;


ALTER FUNCTION public.concat(razd text, pfirst text, psecond text) OWNER TO postgres;

--
-- Name: delete_change_trigger_func(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.delete_change_trigger_func() RETURNS trigger
    LANGUAGE plpgsql SECURITY DEFINER
    AS $$
DECLARE
    tbl   regclass;
    nbrow bigint;
BEGIN
    IF   TG_OP = 'DELETE'
 
	THEN
 
			   FOR tbl IN
					  SELECT c.oid
					  FROM   pg_class     c
					  JOIN   pg_namespace n ON n.oid = c.relnamespace
					  WHERE  c.relkind = 'r'
					  AND    n.nspname NOT LIKE 'pg\_%'         -- system schema(s)
					  AND    n.nspname <> 'public'  			-- public schema
					  ORDER  BY n.nspname, c.relname
			   LOOP

					  EXECUTE 'SELECT count(*) FROM ' || tbl INTO nbrow;
					  raise notice '%: % rows', tbl, nbrow;
			   END LOOP;
	END IF;
END
$$;


ALTER FUNCTION public.delete_change_trigger_func() OWNER TO postgres;

--
-- Name: f_str_agg_final(anyarray, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.f_str_agg_final(anyarray, val text) RETURNS text
    LANGUAGE sql
    AS $_$SELECT array_to_string($1, val)$_$;


ALTER FUNCTION public.f_str_agg_final(anyarray, val text) OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: t_history; Type: TABLE; Schema: logging; Owner: postgres
--

CREATE TABLE logging.t_history (
    id integer NOT NULL,
    tstamp timestamp without time zone DEFAULT now(),
    schemaname text,
    tabname text,
    operation text,
    who text DEFAULT CURRENT_USER,
    new_val json,
    old_val json
);


ALTER TABLE logging.t_history OWNER TO postgres;

--
-- Name: t_history_id_seq; Type: SEQUENCE; Schema: logging; Owner: postgres
--

CREATE SEQUENCE logging.t_history_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE logging.t_history_id_seq OWNER TO postgres;

--
-- Name: t_history_id_seq; Type: SEQUENCE OWNED BY; Schema: logging; Owner: postgres
--

ALTER SEQUENCE logging.t_history_id_seq OWNED BY logging.t_history.id;


--
-- Name: classroom; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.classroom (
    pid_classroom integer NOT NULL,
    fid_school integer NOT NULL
);


ALTER TABLE public.classroom OWNER TO postgres;

--
-- Name: TABLE classroom; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.classroom IS 'TRIAL';


--
-- Name: COLUMN classroom.pid_classroom; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.classroom.pid_classroom IS 'TRIAL';


--
-- Name: COLUMN classroom.fid_school; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.classroom.fid_school IS 'TRIAL';


--
-- Name: classroom_pid_classroom_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.classroom_pid_classroom_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.classroom_pid_classroom_seq OWNER TO postgres;

--
-- Name: classroom_pid_classroom_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.classroom_pid_classroom_seq OWNED BY public.classroom.pid_classroom;


--
-- Name: contract; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.contract (
    pid_contract integer NOT NULL,
    date_of_creation date,
    monetary_condition text,
    type text,
    fid_group integer NOT NULL,
    fid_student integer NOT NULL,
    id_major integer,
    duties text
);


ALTER TABLE public.contract OWNER TO postgres;

--
-- Name: TABLE contract; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.contract IS 'TRIAL';


--
-- Name: COLUMN contract.pid_contract; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.contract.pid_contract IS 'TRIAL';


--
-- Name: COLUMN contract.date_of_creation; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.contract.date_of_creation IS 'TRIAL';


--
-- Name: COLUMN contract.monetary_condition; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.contract.monetary_condition IS 'TRIAL';


--
-- Name: COLUMN contract.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.contract.type IS 'TRIAL';


--
-- Name: COLUMN contract.fid_group; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.contract.fid_group IS 'TRIAL';


--
-- Name: COLUMN contract.fid_student; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.contract.fid_student IS 'TRIAL';


--
-- Name: COLUMN contract.id_major; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.contract.id_major IS 'TRIAL';


--
-- Name: COLUMN contract.duties; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.contract.duties IS 'TRIAL';


--
-- Name: contract_pid_contract_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.contract_pid_contract_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.contract_pid_contract_seq OWNER TO postgres;

--
-- Name: contract_pid_contract_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.contract_pid_contract_seq OWNED BY public.contract.pid_contract;


--
-- Name: curriculum; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.curriculum (
    pid_major integer NOT NULL,
    duration text,
    subjects text,
    year_of_study text
);


ALTER TABLE public.curriculum OWNER TO postgres;

--
-- Name: TABLE curriculum; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.curriculum IS 'TRIAL';


--
-- Name: COLUMN curriculum.pid_major; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.curriculum.pid_major IS 'TRIAL';


--
-- Name: COLUMN curriculum.duration; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.curriculum.duration IS 'TRIAL';


--
-- Name: COLUMN curriculum.subjects; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.curriculum.subjects IS 'TRIAL';


--
-- Name: COLUMN curriculum.year_of_study; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.curriculum.year_of_study IS 'TRIAL';


--
-- Name: curriculum_pid_major_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.curriculum_pid_major_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.curriculum_pid_major_seq OWNER TO postgres;

--
-- Name: curriculum_pid_major_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.curriculum_pid_major_seq OWNED BY public.curriculum.pid_major;


--
-- Name: equipement; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.equipement (
    pid_inventory integer NOT NULL,
    fid_classroom integer NOT NULL,
    e_name text,
    quantity integer
);


ALTER TABLE public.equipement OWNER TO postgres;

--
-- Name: groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.groups (
    pid_group integer NOT NULL,
    pupil_quantity numeric,
    year_of_study numeric
);


ALTER TABLE public.groups OWNER TO postgres;

--
-- Name: TABLE groups; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.groups IS 'TRIAL';


--
-- Name: COLUMN groups.pid_group; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.groups.pid_group IS 'TRIAL';


--
-- Name: COLUMN groups.pupil_quantity; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.groups.pupil_quantity IS 'TRIAL';


--
-- Name: COLUMN groups.year_of_study; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.groups.year_of_study IS 'TRIAL';


--
-- Name: groups_pid_group_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.groups_pid_group_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.groups_pid_group_seq OWNER TO postgres;

--
-- Name: groups_pid_group_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.groups_pid_group_seq OWNED BY public.groups.pid_group;


--
-- Name: my_object; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.my_object (
    id integer NOT NULL,
    name text,
    surname text,
    patrinimic text,
    time_create timestamp without time zone NOT NULL,
    time_dead timestamp without time zone
);


ALTER TABLE public.my_object OWNER TO postgres;

--
-- Name: parent; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.parent (
    fid_student integer NOT NULL,
    p_surname text,
    p_name text,
    p_patronymic text,
    phone_number numeric(10,10),
    address text
);


ALTER TABLE public.parent OWNER TO postgres;

--
-- Name: school; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.school (
    pid_school integer NOT NULL,
    name text,
    address text
);


ALTER TABLE public.school OWNER TO postgres;

--
-- Name: TABLE school; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.school IS 'TRIAL';


--
-- Name: COLUMN school.pid_school; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.school.pid_school IS 'TRIAL';


--
-- Name: COLUMN school.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.school.name IS 'TRIAL';


--
-- Name: COLUMN school.address; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.school.address IS 'TRIAL';


--
-- Name: school_pid_school_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.school_pid_school_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.school_pid_school_seq OWNER TO postgres;

--
-- Name: school_pid_school_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.school_pid_school_seq OWNED BY public.school.pid_school;


--
-- Name: sqlite_sequence; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sqlite_sequence (
    name text,
    seq text,
    trial176 character(1)
);


ALTER TABLE public.sqlite_sequence OWNER TO postgres;

--
-- Name: TABLE sqlite_sequence; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.sqlite_sequence IS 'TRIAL';


--
-- Name: COLUMN sqlite_sequence.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.sqlite_sequence.name IS 'TRIAL';


--
-- Name: COLUMN sqlite_sequence.seq; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.sqlite_sequence.seq IS 'TRIAL';


--
-- Name: COLUMN sqlite_sequence.trial176; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.sqlite_sequence.trial176 IS 'TRIAL';


--
-- Name: staff; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.staff (
    pid_staff integer NOT NULL,
    fid_school integer,
    s_surname text,
    s_name text,
    s_patronymic text,
    post text,
    salary double precision,
    date_of_birth date,
    address text,
    phone_number numeric,
    email text,
    gender character varying(1),
    active boolean,
    login text,
    password text,
    description text
);


ALTER TABLE public.staff OWNER TO postgres;

--
-- Name: student; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.student (
    pid_student integer NOT NULL,
    s_surname text,
    s_name text,
    s_patronymic text,
    phone_number numeric,
    date_of_birth text,
    description text,
    gender text,
    pc boolean,
    payment boolean
);


ALTER TABLE public.student OWNER TO postgres;

--
-- Name: TABLE student; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.student IS 'TRIAL';


--
-- Name: COLUMN student.pid_student; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.student.pid_student IS 'TRIAL';


--
-- Name: COLUMN student.s_surname; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.student.s_surname IS 'TRIAL';


--
-- Name: COLUMN student.s_name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.student.s_name IS 'TRIAL';


--
-- Name: COLUMN student.s_patronymic; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.student.s_patronymic IS 'TRIAL';


--
-- Name: COLUMN student.phone_number; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.student.phone_number IS 'TRIAL';


--
-- Name: COLUMN student.date_of_birth; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.student.date_of_birth IS 'TRIAL';


--
-- Name: COLUMN student.description; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.student.description IS 'TRIAL';


--
-- Name: COLUMN student.gender; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.student.gender IS 'TRIAL';


--
-- Name: student_pid_student_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.student_pid_student_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.student_pid_student_seq OWNER TO postgres;

--
-- Name: student_pid_student_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.student_pid_student_seq OWNED BY public.student.pid_student;


--
-- Name: t_history; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.t_history (
    id integer NOT NULL,
    tstamp timestamp without time zone DEFAULT now(),
    tabname text,
    operation text,
    who text DEFAULT CURRENT_USER,
    new_val text,
    old_val text
);


ALTER TABLE public.t_history OWNER TO postgres;

--
-- Name: t_history_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.t_history_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.t_history_id_seq OWNER TO postgres;

--
-- Name: t_history_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.t_history_id_seq OWNED BY public.t_history.id;


--
-- Name: teacher; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.teacher (
    fid_staff integer NOT NULL,
    fid_group integer NOT NULL,
    trial176 character(1)
);


ALTER TABLE public.teacher OWNER TO postgres;

--
-- Name: TABLE teacher; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.teacher IS 'TRIAL';


--
-- Name: COLUMN teacher.fid_staff; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.teacher.fid_staff IS 'TRIAL';


--
-- Name: COLUMN teacher.fid_group; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.teacher.fid_group IS 'TRIAL';


--
-- Name: COLUMN teacher.trial176; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.teacher.trial176 IS 'TRIAL';


--
-- Name: t_history id; Type: DEFAULT; Schema: logging; Owner: postgres
--

ALTER TABLE ONLY logging.t_history ALTER COLUMN id SET DEFAULT nextval('logging.t_history_id_seq'::regclass);


--
-- Name: classroom pid_classroom; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.classroom ALTER COLUMN pid_classroom SET DEFAULT nextval('public.classroom_pid_classroom_seq'::regclass);


--
-- Name: contract pid_contract; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contract ALTER COLUMN pid_contract SET DEFAULT nextval('public.contract_pid_contract_seq'::regclass);


--
-- Name: curriculum pid_major; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.curriculum ALTER COLUMN pid_major SET DEFAULT nextval('public.curriculum_pid_major_seq'::regclass);


--
-- Name: groups pid_group; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.groups ALTER COLUMN pid_group SET DEFAULT nextval('public.groups_pid_group_seq'::regclass);


--
-- Name: school pid_school; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.school ALTER COLUMN pid_school SET DEFAULT nextval('public.school_pid_school_seq'::regclass);


--
-- Name: student pid_student; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.student ALTER COLUMN pid_student SET DEFAULT nextval('public.student_pid_student_seq'::regclass);


--
-- Name: t_history id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.t_history ALTER COLUMN id SET DEFAULT nextval('public.t_history_id_seq'::regclass);


--
-- Data for Name: t_history; Type: TABLE DATA; Schema: logging; Owner: postgres
--

COPY logging.t_history (id, tstamp, schemaname, tabname, operation, who, new_val, old_val) FROM stdin;
\.


--
-- Data for Name: classroom; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.classroom (pid_classroom, fid_school) FROM stdin;
4	1
2	2
5	1
\.


--
-- Data for Name: contract; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.contract (pid_contract, date_of_creation, monetary_condition, type, fid_group, fid_student, id_major, duties) FROM stdin;
2	2019-09-05	10000	на обучение	1	2	1	
3	2019-09-04	10000	на обучение	1	3	1	
4	2019-08-01	10000	на обучение	1	4	1	
5	2019-09-03	10000	на обучение	1	5	1	
6	2019-08-31	10000	на обучение	1	6	1	
7	2019-08-30	10000	на обучение	1	7	1	
8	2019-08-25	10000	на обучение	2	8	1	
9	2019-09-10	20000	на обучение	2	9	1	
10	2019-09-09	20000	на обучение	2	10	1	
11	2019-09-08	25000	на обучение	3	11	2	
12	2019-09-12	25000	на обучение	3	12	2	
13	2019-09-13	25000	на обучение	3	13	2	
14	2019-09-14	25000	на обучение	3	14	2	
15	2019-09-15	25000	на обучение	3	15	2	
16	2019-09-16	20000	на обучение	4	16	2	
17	2019-09-17	20000	на обучение	4	17	2	
18	2019-09-18	20000	на обучение	4	18	2	
19	2019-09-19	20000	на обучение	4	19	2	
20	2019-09-20	20000	на обучение	4	20	2	
21	2019-09-21	20000	на обучение	4	21	2	
22	2019-09-22	20000	на обучение	4	22	2	
\.


--
-- Data for Name: curriculum; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.curriculum (pid_major, duration, subjects, year_of_study) FROM stdin;
1	90	Scratch Start	1
2	90	Python Start	1
\.


--
-- Data for Name: equipement; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.equipement (pid_inventory, fid_classroom, e_name, quantity) FROM stdin;
\.


--
-- Data for Name: groups; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.groups (pid_group, pupil_quantity, year_of_study) FROM stdin;
1	7	1
2	3	2
3	6	2
4	6	1
\.


--
-- Data for Name: my_object; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.my_object (id, name, surname, patrinimic, time_create, time_dead) FROM stdin;
2	Саша	Булин	{Rakh}	2019-11-30 13:06:46.747306	2019-11-30 14:41:22.670513
1	Саша	Булин	{Rakh}	2019-11-30 12:45:28.220001	2019-11-30 12:47:42.224048
1	Саша	Булин	{Rakh}	2019-11-30 12:47:42.224048	2019-11-30 14:42:45.998761
4	Оганесян	Акоп	Акопян	2019-11-30 14:44:50.858042	\N
3	Саша	Булин	Игоревич	2019-11-30 14:43:58.851526	2019-11-30 14:47:05.21479
\.


--
-- Data for Name: parent; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.parent (fid_student, p_surname, p_name, p_patronymic, phone_number, address) FROM stdin;
\.


--
-- Data for Name: school; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.school (pid_school, name, address) FROM stdin;
1	"Учебный центр"	ул. Гарарина
2	"Центр"	ул. Площадь
\.


--
-- Data for Name: sqlite_sequence; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.sqlite_sequence (name, seq, trial176) FROM stdin;
classroom	2	T
curriculum	2	T
school	1	T
groups	4	T
contract	22	T
equipement	10	T
student	24	T
\.


--
-- Data for Name: staff; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.staff (pid_staff, fid_school, s_surname, s_name, s_patronymic, post, salary, date_of_birth, address, phone_number, email, gender, active, login, password, description) FROM stdin;
1	1	Анваров	Шукурулло	 	директор	30000	1997-10-19	ул. Мечникова	953	mustafo.xon@gmail.com	М	t	nero	admin123	director and teacher
2	1	Василегин	Владислав	Игоревич	учитель	10000	1999-10-19	ул. Мечникова	955823	vlad2019@gmail.com	М	t	vlad	vlad123	teacher
3	1	Магомедов	Мурад	Мурадович	учитель	3000	2000-10-19	ул. Текучева	955823	murad.m@gmail.com	Ж	f	murad	murad123	fired teacher
\.


--
-- Data for Name: student; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.student (pid_student, s_surname, s_name, s_patronymic, phone_number, date_of_birth, description, gender, pc, payment) FROM stdin;
1	Иванов	Лев		79995687854		\N	\N	f	t
2	Карманов	Даниил		79286541237		\N	\N	t	t
3	Колесников	Михаил		78634567824		\N	\N	t	t
4	Миньков	Владимир		79856548721		\N	\N	t	t
5	Тяпкин	Михаил	\N	\N	\N	\N	\N	f	t
6	Чега	Михаил		79096548596		\N	\N	t	t
7	Яценко	Николай		79514564546		\N	\N	t	t
8	Мамин	Даниил		79683524568		\N	\N	t	t
9	Есеев	Кирилл		79634789632		\N	\N	t	t
10	Сивак	Роман		79632147896		\N	\N	t	t
11	Баркунов	Степан		79654123654		\N	\N	t	t
12	Никишин	Тимур		79874563214		\N	\N	t	t
13	Полякова	Екатерина		79632587412		\N	\N	f	t
14	Рябых	Никита		79534564622		\N	\N	t	t
15	Теран	Марк		79897775445		\N	\N	t	t
16	Яценко	Виталий		79658525522		\N	\N	t	t
17	Бабичев	Егор		76524568842		\N	\N	t	t
18	Комиссаров	Александр		79895656566		\N	\N	t	t
20	Щеголов	Милан		79887778899		\N	\N	t	t
22	Когай	Андрей		79655654466		\N	\N	t	t
21	Кихтан	Рома		79553231155				t	t
23	Цечоев	Мустафа		49564212153		Вася	М	t	f
19	Мироненко	Мирон	Миронг	79996989898		\N	\N	t	t
\.


--
-- Data for Name: t_history; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.t_history (id, tstamp, tabname, operation, who, new_val, old_val) FROM stdin;
134	2019-12-12 13:39:33.659538	classroom	INSERT	postgres	(5,1)	\N
\.


--
-- Data for Name: teacher; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.teacher (fid_staff, fid_group, trial176) FROM stdin;
1	1	T
1	4	T
2	2	T
3	3	T
\.


--
-- Name: t_history_id_seq; Type: SEQUENCE SET; Schema: logging; Owner: postgres
--

SELECT pg_catalog.setval('logging.t_history_id_seq', 1, false);


--
-- Name: classroom_pid_classroom_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.classroom_pid_classroom_seq', 2, true);


--
-- Name: contract_pid_contract_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.contract_pid_contract_seq', 22, true);


--
-- Name: curriculum_pid_major_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.curriculum_pid_major_seq', 2, true);


--
-- Name: groups_pid_group_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.groups_pid_group_seq', 4, true);


--
-- Name: school_pid_school_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.school_pid_school_seq', 1, true);


--
-- Name: student_pid_student_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.student_pid_student_seq', 1, true);


--
-- Name: t_history_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.t_history_id_seq', 156, true);


--
-- Name: contract contract_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contract
    ADD CONSTRAINT contract_pk PRIMARY KEY (pid_contract);


--
-- Name: equipement equipement_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.equipement
    ADD CONSTRAINT equipement_pkey PRIMARY KEY (pid_inventory);


--
-- Name: my_object pk_my_table; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.my_object
    ADD CONSTRAINT pk_my_table PRIMARY KEY (id, time_create);


--
-- Name: classroom sqlite_autoindex_classroom_1; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.classroom
    ADD CONSTRAINT sqlite_autoindex_classroom_1 PRIMARY KEY (pid_classroom);


--
-- Name: curriculum sqlite_autoindex_curriculum_1; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.curriculum
    ADD CONSTRAINT sqlite_autoindex_curriculum_1 PRIMARY KEY (pid_major);


--
-- Name: groups sqlite_autoindex_groups_1; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.groups
    ADD CONSTRAINT sqlite_autoindex_groups_1 PRIMARY KEY (pid_group);


--
-- Name: school sqlite_autoindex_school_1; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.school
    ADD CONSTRAINT sqlite_autoindex_school_1 PRIMARY KEY (pid_school);


--
-- Name: student sqlite_autoindex_student_1; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.student
    ADD CONSTRAINT sqlite_autoindex_student_1 PRIMARY KEY (pid_student);


--
-- Name: staff staff_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.staff
    ADD CONSTRAINT staff_pk PRIMARY KEY (pid_staff);


--
-- Name: fki_fid_major; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_fid_major ON public.contract USING btree (id_major);


--
-- Name: fki_fk_grop_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_fk_grop_id ON public.contract USING btree (fid_group);


--
-- Name: fki_fk_school_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_fk_school_id ON public.classroom USING btree (fid_school);


--
-- Name: fki_fk_student_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fki_fk_student_id ON public.contract USING btree (fid_student);


--
-- Name: fkindex_fk_student_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX fkindex_fk_student_id ON public.parent USING btree (fid_student);


--
-- Name: my_object insert_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER insert_trigger BEFORE INSERT ON public.my_object FOR EACH ROW EXECUTE FUNCTION public.change_my_table();


--
-- Name: classroom t_classroom; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER t_classroom BEFORE INSERT OR DELETE OR UPDATE ON public.classroom FOR EACH ROW EXECUTE FUNCTION public.change_trigger();


--
-- Name: curriculum t_curriculum; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER t_curriculum BEFORE INSERT OR DELETE OR UPDATE ON public.curriculum FOR EACH ROW EXECUTE FUNCTION public.change_trigger();


--
-- Name: equipement t_equipement; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER t_equipement BEFORE INSERT OR DELETE OR UPDATE ON public.equipement FOR EACH ROW EXECUTE FUNCTION public.change_trigger();


--
-- Name: groups t_groups; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER t_groups BEFORE INSERT OR DELETE OR UPDATE ON public.groups FOR EACH ROW EXECUTE FUNCTION public.change_trigger();


--
-- Name: parent t_parent; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER t_parent BEFORE INSERT OR DELETE OR UPDATE ON public.parent FOR EACH ROW EXECUTE FUNCTION public.change_trigger();


--
-- Name: school t_school; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER t_school BEFORE INSERT OR DELETE OR UPDATE ON public.school FOR EACH ROW EXECUTE FUNCTION public.change_trigger();


--
-- Name: staff t_staff; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER t_staff BEFORE INSERT OR DELETE OR UPDATE ON public.staff FOR EACH ROW EXECUTE FUNCTION public.change_trigger();


--
-- Name: student t_student; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER t_student BEFORE INSERT OR DELETE OR UPDATE ON public.student FOR EACH ROW EXECUTE FUNCTION public.change_trigger();


--
-- Name: teacher t_teacher; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER t_teacher BEFORE INSERT OR DELETE OR UPDATE ON public.teacher FOR EACH ROW EXECUTE FUNCTION public.change_trigger();


--
-- Name: my_object update_trigger; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER update_trigger AFTER UPDATE ON public.my_object FOR EACH ROW EXECUTE FUNCTION public.change_my_table();


--
-- Name: equipement equipement_fid_classroom_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.equipement
    ADD CONSTRAINT equipement_fid_classroom_fkey FOREIGN KEY (fid_classroom) REFERENCES public.classroom(pid_classroom) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: contract fid_major; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contract
    ADD CONSTRAINT fid_major FOREIGN KEY (id_major) REFERENCES public.curriculum(pid_major) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: contract fk_grop_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contract
    ADD CONSTRAINT fk_grop_id FOREIGN KEY (fid_group) REFERENCES public.groups(pid_group) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: classroom fk_school_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.classroom
    ADD CONSTRAINT fk_school_id FOREIGN KEY (fid_school) REFERENCES public.school(pid_school) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: teacher fk_student_groups_0; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teacher
    ADD CONSTRAINT fk_student_groups_0 FOREIGN KEY (fid_group) REFERENCES public.groups(pid_group) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: contract fk_student_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.contract
    ADD CONSTRAINT fk_student_id FOREIGN KEY (fid_student) REFERENCES public.student(pid_student) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: parent fk_student_pid; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.parent
    ADD CONSTRAINT fk_student_pid FOREIGN KEY (fid_student) REFERENCES public.student(pid_student) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: staff staff_fid_school_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.staff
    ADD CONSTRAINT staff_fid_school_fkey FOREIGN KEY (fid_school) REFERENCES public.school(pid_school) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

